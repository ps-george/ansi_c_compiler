# Function main
main:
	.frame $fp,f# vars=16 , regs= 1/0, args= 0, gp= 0
	.mask = 0x40000000,-4
	addiu $sp, $sp,-24 #(insert vars + 8)
	sw $fp,20($sp)
	move $fp, $sp
# Declaration, with type 'int' of: i, j, k, l, 
# printing asm for ExpressionList
# child is AssignmentExpression
# assignment expression with op: '='
	lw	$2,0($fp) # load left hand side into a register.
	li $2, 1 # Load constant into active register
	sw  $2,0($fp) # store back in the same place
# printing asm for ExpressionList
# child is AssignmentExpression
# assignment expression with op: '='
	lw	$2,4($fp) # load left hand side into a register.
	li $2, 2 # Load constant into active register
	sw  $2,4($fp) # store back in the same place
# printing asm for ExpressionList
# child is AssignmentExpression
# assignment expression with op: '='
	lw	$2,8($fp) # load left hand side into a register.
	li $2, 3 # Load constant into active register
	sw  $2,8($fp) # store back in the same place
# printing asm for ExpressionList
# child is AssignmentExpression
# assignment expression with op: '='
	lw	$2,12($fp) # load left hand side into a register.
	li $2, 4 # Load constant into active register
	sw  $2,12($fp) # store back in the same place
# printing asm for ExpressionList
# child is Variable
